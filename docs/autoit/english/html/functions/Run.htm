<!DOCTYPE html>
<html>
<head>
  <title>Function Run</title>
  <meta charset="ISO-8859-1">
  <link href="../css/default.css" rel="stylesheet" type="text/css">
</head>

<body>
<h1 class="small">Function Reference</h1>
<hr style="height:0px">
<h1>Run</h1>
<p class="funcdesc">Runs an external program.<br></p>

<p class="codeheader">
Run ( "program" [, "workingdir" [, show_flag [, opt_flag]]] )<br>
</p>

<h2>Parameters</h2>
<table>
  <tr>
    <td style="width:15%">program</td>
    <td style="width:85%">The full path of the program (EXE, BAT, COM, or PIF) to run (see remarks).</td>
  </tr>
  <tr>
   <td>workingdir</td>
   <td>	<b>[optional]</b> The working directory. Blank ("") uses the current working directory.  This is not the path to the program.</td>
  </tr>
  <tr>
   <td>show_flag</td>
   <td>	<b>[optional]</b> The "show" flag of the executed program:<br>
       @SW_HIDE = Hidden window (or Default keyword)<br>
       @SW_MINIMIZE = Minimized window<br>
       @SW_MAXIMIZE = Maximized window</td>
  </tr>
  <tr>
   <td>opt_flag</td>
   <td>	<b>[optional]</b> Controls various options related to how the parent and child process interact.<br>
       0x1 ($STDIN_CHILD)  = Provide a handle to the child's STDIN stream<br>
       0x2 ($STDOUT_CHILD) = Provide a handle to the child's STDOUT stream<br>
       0x4 ($STDERR_CHILD) = Provide a handle to the child's STDERR stream<br>
       0x8 ($STDERR_MERGED) = Provides the same handle for STDOUT and STDERR.  Implies both $STDOUT_CHILD and $STDERR_CHILD.<br>
       0x10 ($STDIO_INHERIT_PARENT) = Provide the child with the parent's STDIO streams.  This flag can not be combined with any other STDIO flag.  This flag is only useful when the parent is compiled as a Console application.<br>
       0x10000 ($RUN_CREATE_NEW_CONSOLE) = The child console process should be created with it's own window instead of using the parent's window.  This flag is only useful when the parent is compiled as a Console application.</td>
  </tr>
</table>


<h2>Return Value</h2>
<table class="noborder">
  <tr>
    <td style="width:10%" valign="top">Success:</td>
    <td style="width:90%">The PID of the process that was launched.</td>
  </tr>
  <tr>
    <td valign="top">Failure:</td>
    <td>Returns 0 and sets @error to non-zero.</td>
  </tr>
</table>

<h2>Remarks</h2>
Paths with spaces need to be enclosed in quotation marks.<br>
<br>
To run DOS (console) commands, try <i>Run(@ComSpec & " /c " & 'commandName', "", @SW_HIDE)	; don't forget " " before "/c"</i><br>
<br>
After running the requested program the script continues.  To pause execution of the script until the spawned program has finished use the RunWait function instead.<br>
<br>
Providing the Standard I/O parameter with the proper values permits interaction with the child process through the StderrRead, StdinWrite and StdoutRead functions. Combine the flag values (or use $STDERR_CHILD, $STDIN_CHILD & $STDOUT_CHILD, defined in Constants.au3) to manage more than one stream.<br>
<br>
In order for the streams to close, the following conditions must be met: 1) The child process has closed its end of the stream (this happens when the child closes).  2) AutoIt must read any captured streams until there is no more data.  3) If STDIN is provided for the child, StdinWrite() must be called to close the stream.  Once all streams are detected as no longer needed, all internal resources will automatically be freed.<br>
StdioClose can be used to force the STDIO streams closed.<br>
<br>

<h2>Related</h2>
<a href="RunWait.htm">RunWait</a>, <a href="RunAs.htm">RunAs</a>, <a href="RunAsWait.htm">RunAsWait</a>, <a href="ShellExecute.htm">ShellExecute</a>, <a href="ShellExecuteWait.htm">ShellExecuteWait</a>, <a href="StderrRead.htm">StderrRead</a>, <a href="StdinWrite.htm">StdinWrite</a>, <a href="StdoutRead.htm">StdoutRead</a>, <a href="StdioClose.htm">StdioClose</a>, <a href="ProcessClose.htm">ProcessClose</a>, <a href="ConsoleRead.htm">ConsoleRead</a>


<h2 class="bottom">Example</h2>
<script type="text/javascript">
if ((navigator.appName=="Microsoft Internet Explorer") && (parseInt(navigator.appVersion)>=4)) // IE (4+) only
    function copyToClipboard(s){if (window.clipboardData && clipboardData.setData){clipboardData.setData("text", s + "\r\n");alert("Copied to clipboard");}}
</script>
<div class="codeSnippetContainer">
    <div class="codeSnippetContainerTabs">
<script type="text/javascript">
if (document.URL.match(/^mk:@MSITStore:/i))
{
document.write('<div class="codeSnippetContainerTab codeSnippetContainerTabSingle" dir="ltr">');
document.write('<object id=hhctrl type="application/x-oleobject" classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"><param name="Command" value="ShortCut"><param name="Font" value="Verdana,10pt"><param name="Text" value="Text:Open this Script"><param name="Item1" value=",Examples\\HelpFile\\Run.au3,"></object>');
document.write('</div>');
}
</script>
    </div>
    <div class="codeSnippetContainerCodeContainer">
        <div class="codeSnippetToolBar">
            <div class="codeSnippetToolBarText">
<script type="text/javascript">
if ((navigator.appName=="Microsoft Internet Explorer") && (parseInt(navigator.appVersion)>=4)) // IE (4+) only
    document.write('<a href="#" id="copy" onclick="copyToClipboard(document.getElementById(\'copytext0\').innerText)">Copy to clipboard</a>');
</script>
            </div>
        </div>
        <div id="copytext0" class="codeSnippetContainerCode" dir="ltr">
<div style="color:Black;"><pre>
<span><span class="S0">Example</span><span class="S8">()</span>

<span class="S5">Func</span><span class="S0"> Example</span><span class="S8">()</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Run Notepad with the window maximized.</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">Local</span><span class="S0"> </span><span class="S9">$iPID</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S4">Run</span><span class="S8">(</span><span class="S7">"notepad.exe"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">""</span><span class="S8">,</span><span class="S0"> </span><span class="S6">@SW_SHOWMAXIMIZED</span><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Wait 10 seconds for the Notepad window to appear.</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S4">WinWait</span><span class="S8">(</span><span class="S7">"[CLASS:Notepad]"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">""</span><span class="S8">,</span><span class="S0"> </span><span class="S3">10</span><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Wait for 2 seconds.</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S4">Sleep</span><span class="S8">(</span><span class="S3">2000</span><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Close the Notepad process using the PID returned by Run.</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S4">ProcessClose</span><span class="S8">(</span><span class="S9">$iPID</span><span class="S8">)</span>
<span class="S5">EndFunc</span><span class="S0"> &nbsp;&nbsp;</span><span class="S1">;==&gt;Example</span>
<span class="S0"></span></span>
</pre></div>
		</div>
	</div>
</div>


</body>
</html>
