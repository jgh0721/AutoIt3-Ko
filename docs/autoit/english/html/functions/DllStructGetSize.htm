<!DOCTYPE html>
<html>
<head>
  <title>Function DllStructGetSize</title>
  <meta charset="ISO-8859-1">
  <link href="../css/default.css" rel="stylesheet" type="text/css">
</head>

<body>
<h1 class="small">Function Reference</h1>
<hr style="height:0px">
<h1>DllStructGetSize</h1>
<p class="funcdesc">Returns the size of the struct in bytes.<br></p>

<p class="codeheader">
DllStructGetSize ( Struct )<br>
</p>

<h2>Parameters</h2>
<table>
  <tr>
    <td style="width:15%">Struct</td>
    <td style="width:85%">The struct returned by DllStructCreate.</td>
  </tr>
</table>


<h2>Return Value</h2>
<table class="noborder">
  <tr>
    <td style="width:10%" valign="top">Success:</td>
    <td style="width:90%">The size of the struct in bytes.</td>
  </tr>
  <tr>
    <td valign="top">Failure:</td>
    <td>0.</td>
  </tr>
  <tr>
    <td valign="top">@error:</td>
    <td>1 = Struct not a correct struct returned by DllStructCreate.</td>
  </tr>
</table>

<h2>Remarks</h2>
Used when data in the struct needs to hold the struct size.<br>
<br>

<h2>Related</h2>
<a href="DllStructCreate.htm">DllStructCreate</a>, <a href="DllStructSetData.htm">DllStructSetData</a>


<h2 class="bottom">Example</h2>
<script type="text/javascript">
if ((navigator.appName=="Microsoft Internet Explorer") && (parseInt(navigator.appVersion)>=4)) // IE (4+) only
    function copyToClipboard(s){if (window.clipboardData && clipboardData.setData){clipboardData.setData("text", s + "\r\n");alert("Copied to clipboard");}}
</script>
<div class="codeSnippetContainer">
    <div class="codeSnippetContainerTabs">
<script type="text/javascript">
if (document.URL.match(/^mk:@MSITStore:/i))
{
document.write('<div class="codeSnippetContainerTab codeSnippetContainerTabSingle" dir="ltr">');
document.write('<object id=hhctrl type="application/x-oleobject" classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"><param name="Command" value="ShortCut"><param name="Font" value="Verdana,10pt"><param name="Text" value="Text:Open this Script"><param name="Item1" value=",Examples\\HelpFile\\DllStructGetSize.au3,"></object>');
document.write('</div>');
}
</script>
    </div>
    <div class="codeSnippetContainerCodeContainer">
        <div class="codeSnippetToolBar">
            <div class="codeSnippetToolBarText">
<script type="text/javascript">
if ((navigator.appName=="Microsoft Internet Explorer") && (parseInt(navigator.appVersion)>=4)) // IE (4+) only
    document.write('<a href="#" id="copy" onclick="copyToClipboard(document.getElementById(\'copytext0\').innerText)">Copy to clipboard</a>');
</script>
            </div>
        </div>
        <div id="copytext0" class="codeSnippetContainerCode" dir="ltr">
<div style="color:Black;"><pre>
<span><span class="S11">#include</span><span class="S0"> </span><span class="S7">&lt;Constants.au3&gt;</span>

<span class="S0">Example</span><span class="S8">()</span>

<span class="S5">Func</span><span class="S0"> Example</span><span class="S8">()</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Assign a Local constant variable the definition of a structure.</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">Local</span><span class="S0"> </span><span class="S5">Const</span><span class="S0"> </span><span class="S9">$tagSTRUCT1</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S7">"struct;int var1;byte var2;uint var3;char var4[128];endstruct"</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Assign a Local variable the structure.</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">Local</span><span class="S0"> </span><span class="S9">$tSTRUCT1</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S4">DllStructCreate</span><span class="S8">(</span><span class="S9">$tagSTRUCT1</span><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; If an error occurred display the error code and return False.</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">If</span><span class="S0"> </span><span class="S6">@error</span><span class="S0"> </span><span class="S5">Then</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S4">MsgBox</span><span class="S8">(</span><span class="S9">$MB_SYSTEMMODAL</span><span class="S8">,</span><span class="S0"> </span><span class="S7">""</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Error in DllStructCreate, Code: "</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S6">@error</span><span class="S8">)</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S5">Return</span><span class="S0"> </span><span class="S5">False</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">EndIf</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S2">#cs Comments:</span>
<span class="S2">&nbsp; &nbsp; -The default alignment for the data is 4 bytes, thus each element will take at least 4 bytes.</span>
<span class="S2">&nbsp; &nbsp; -The min size can be obtained by setting an alignment of 1 at the beginning of the struct definition: "align 1;struct; ..."</span>

<span class="S2">&nbsp; &nbsp; -Detailed information on the struct size:</span>
<span class="S2">&nbsp; &nbsp; var1: int - 4 bytes</span>
<span class="S2">&nbsp; &nbsp; var2: byte - 1 byte + 3 bytes alignment = 4 bytes</span>
<span class="S2">&nbsp; &nbsp; var3: uint - 4 bytes</span>
<span class="S2">&nbsp; &nbsp; var4: char[128] - 1 * 128 bytes</span>
<span class="S2">&nbsp; &nbsp; #ce</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S4">MsgBox</span><span class="S8">(</span><span class="S9">$MB_SYSTEMMODAL</span><span class="S8">,</span><span class="S0"> </span><span class="S7">""</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"Struct Size: "</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S4">DllStructGetSize</span><span class="S8">(</span><span class="S9">$tSTRUCT1</span><span class="S8">))</span>
<span class="S5">EndFunc</span></span>
</pre></div>
		</div>
	</div>
</div>


</body>
</html>
