<!DOCTYPE html>
<html>
<head>
  <title>Function FileReadLine</title>
  <meta charset="ISO-8859-1">
  <link href="../css/default.css" rel="stylesheet" type="text/css">
</head>

<body>
<h1 class="small">Function Reference</h1>
<hr style="height:0px">
<h1>FileReadLine</h1>
<p class="funcdesc">Read in a line of text from a previously opened text file.<br></p>

<p class="codeheader">
FileReadLine ( "filehandle/filename" [, line = 1] )<br>
</p>

<h2>Parameters</h2>
<table>
  <tr>
    <td style="width:15%">filehandle/filename</td>
    <td style="width:85%">The handle of a file, as returned by a previous call to FileOpen.  Alternatively you may use a string filename as the first parameter.</td>
  </tr>
  <tr>
   <td>line</td>
   <td>	<b>[optional]</b> The line number to read.  The first line of a text file is line 1 (not zero), last line is -1.</td>
  </tr>
</table>


<h2>Return Value</h2>
<table class="noborder">
  <tr>
    <td style="width:10%" valign="top">Success:</td>
    <td style="width:90%">Returns a line of text.</td>
  </tr>
  <tr>
    <td valign="top">Special:</td>
    <td>Sets @error to -1 if end-of-file is reached.</td>
  </tr>
  <tr>
    <td valign="top">Failure:</td>
    <td>Sets @error to 1 if file not opened in read mode or other error.</td>
  </tr>
</table>

<h2>Remarks</h2>
Returns the text of the line read, any newline characters ( Chr(10) or @LF ) at the end of a line read in are automatically stripped.<br>
If no line number to read is given, the "next" line will be read.  ("Next" for a newly opened file is initially the first line.)<br>
If a filename is given rather than a file handle - the file will be opened and closed during the function call - for parsing large text files this will be much slower than using filehandles.<br>
Note: Do not mix filehandles and filenames, i.e., don't FileOpen a file and then use a filename in this function.  Use either filehandles or filenames in your routines, not both!<br>
<br>
From a performance standpoint it is a bad idea to read line by line specifying "line" parameter whose value is incrementing by one. This forces AutoIt to reread the file from the beginning until it reach the specified line.<br>
<br>
Both ANSI and UTF16/UTF8 text formats can be read - AutoIt will automatically determine the type.<br>
<br>

<h2>Related</h2>
<a href="IniRead.htm">IniRead</a>, <a href="FileOpen.htm">FileOpen</a>, <a href="FileRead.htm">FileRead</a>, <a href="FileWrite.htm">FileWrite</a>, <a href="FileWriteLine.htm">FileWriteLine</a>, <a href="FileSetPos.htm">FileSetPos</a>, <a href="FileGetPos.htm">FileGetPos</a>


<h2 class="bottom">Example</h2>
<script type="text/javascript">
if ((navigator.appName=="Microsoft Internet Explorer") && (parseInt(navigator.appVersion)>=4)) // IE (4+) only
    function copyToClipboard(s){if (window.clipboardData && clipboardData.setData){clipboardData.setData("text", s + "\r\n");alert("Copied to clipboard");}}
</script>
<div class="codeSnippetContainer">
    <div class="codeSnippetContainerTabs">
<script type="text/javascript">
if (document.URL.match(/^mk:@MSITStore:/i))
{
document.write('<div class="codeSnippetContainerTab codeSnippetContainerTabSingle" dir="ltr">');
document.write('<object id=hhctrl type="application/x-oleobject" classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"><param name="Command" value="ShortCut"><param name="Font" value="Verdana,10pt"><param name="Text" value="Text:Open this Script"><param name="Item1" value=",Examples\\HelpFile\\FileReadLine.au3,"></object>');
document.write('</div>');
}
</script>
    </div>
    <div class="codeSnippetContainerCodeContainer">
        <div class="codeSnippetToolBar">
            <div class="codeSnippetToolBarText">
<script type="text/javascript">
if ((navigator.appName=="Microsoft Internet Explorer") && (parseInt(navigator.appVersion)>=4)) // IE (4+) only
    document.write('<a href="#" id="copy" onclick="copyToClipboard(document.getElementById(\'copytext0\').innerText)">Copy to clipboard</a>');
</script>
            </div>
        </div>
        <div id="copytext0" class="codeSnippetContainerCode" dir="ltr">
<div style="color:Black;"><pre>
<span><span class="S11">#include</span><span class="S0"> </span><span class="S7">&lt;Constants.au3&gt;</span>

<span class="S0">Example</span><span class="S8">()</span>

<span class="S5">Func</span><span class="S0"> Example</span><span class="S8">()</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Create a constant variable in Local scope of the filepath that will be read/written to.</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">Local</span><span class="S0"> </span><span class="S5">Const</span><span class="S0"> </span><span class="S9">$sFilePath</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S6">@ScriptDir</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S7">"\FileReadLine.txt"</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Create a temporary file to read data from.</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">If</span><span class="S0"> </span><span class="S5">Not</span><span class="S0"> FileCreate</span><span class="S8">(</span><span class="S9">$sFilePath</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"This is an example of using FileReadLine."</span><span class="S8">)</span><span class="S0"> </span><span class="S5">Then</span><span class="S0"> </span><span class="S5">Return</span><span class="S0"> </span><span class="S4">MsgBox</span><span class="S8">(</span><span class="S9">$MB_SYSTEMMODAL</span><span class="S8">,</span><span class="S0"> </span><span class="S7">""</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"An error occurred whilst writing the temporary file."</span><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Open the file for reading and store the handle to a variable.</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">Local</span><span class="S0"> </span><span class="S9">$hFileOpen</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S4">FileOpen</span><span class="S8">(</span><span class="S9">$sFilePath</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$FO_READ</span><span class="S8">)</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">If</span><span class="S0"> </span><span class="S9">$hFileOpen</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S8">-</span><span class="S3">1</span><span class="S0"> </span><span class="S5">Then</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S4">MsgBox</span><span class="S8">(</span><span class="S9">$MB_SYSTEMMODAL</span><span class="S8">,</span><span class="S0"> </span><span class="S7">""</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"An error occurred when reading the file."</span><span class="S8">)</span>
<span class="S0">&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="S5">Return</span><span class="S0"> </span><span class="S5">False</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">EndIf</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Read the fist line of the file using the handle returned by FileOpen.</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">Local</span><span class="S0"> </span><span class="S9">$sFileRead</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S4">FileReadLine</span><span class="S8">(</span><span class="S9">$hFileOpen</span><span class="S8">,</span><span class="S0"> </span><span class="S3">1</span><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Close the handle returned by FileOpen.</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S4">FileClose</span><span class="S8">(</span><span class="S9">$hFileOpen</span><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Display the first line of the file.</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S4">MsgBox</span><span class="S8">(</span><span class="S9">$MB_SYSTEMMODAL</span><span class="S8">,</span><span class="S0"> </span><span class="S7">""</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"First line of the file:"</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S6">@CRLF</span><span class="S0"> </span><span class="S8">&amp;</span><span class="S0"> </span><span class="S9">$sFileRead</span><span class="S8">)</span>

<span class="S0">&nbsp; &nbsp; </span><span class="S1">; Delete the temporary file.</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S4">FileDelete</span><span class="S8">(</span><span class="S9">$sFilePath</span><span class="S8">)</span>
<span class="S5">EndFunc</span><span class="S0"> &nbsp;&nbsp;</span><span class="S1">;==&gt;Example</span>

<span class="S1">; Create a file.</span>
<span class="S5">Func</span><span class="S0"> FileCreate</span><span class="S8">(</span><span class="S9">$sFilePath</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$sString</span><span class="S8">)</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">Local</span><span class="S0"> </span><span class="S9">$fReturn</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S5">True</span><span class="S0"> </span><span class="S1">; Create a variable to store a boolean value.</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">If</span><span class="S0"> </span><span class="S4">FileExists</span><span class="S8">(</span><span class="S9">$sFilePath</span><span class="S8">)</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S3">0</span><span class="S0"> </span><span class="S5">Then</span><span class="S0"> </span><span class="S9">$fReturn</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S4">FileWrite</span><span class="S8">(</span><span class="S9">$sFilePath</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$sString</span><span class="S8">)</span><span class="S0"> </span><span class="S8">=</span><span class="S0"> </span><span class="S3">1</span><span class="S0"> </span><span class="S1">; If FileWrite returned 1 this will be True otherwise False.</span>
<span class="S0">&nbsp; &nbsp; </span><span class="S5">Return</span><span class="S0"> </span><span class="S9">$fReturn</span><span class="S0"> </span><span class="S1">; Return the boolean value of either True of False, depending on the return value of FileWrite.</span>
<span class="S5">EndFunc</span><span class="S0"> &nbsp;&nbsp;</span><span class="S1">;==&gt;FileCreate</span>
<span class="S0"></span></span>
</pre></div>
		</div>
	</div>
</div>


</body>
</html>
